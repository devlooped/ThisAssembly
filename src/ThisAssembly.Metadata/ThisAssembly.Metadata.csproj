<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>netstandard2.0</TargetFramework>
    <LangVersion>latest</LangVersion>
    <IsRoslynComponent>true</IsRoslynComponent>
  </PropertyGroup>

  <PropertyGroup>
    <PackageId>ThisAssembly.Metadata</PackageId>
    <Description>
This package generates a static `ThisAssembly.Metadata` class with public 
constants exposing each `[System.Reflection.AssemblyMetadata(..)]` defined for the project, 
such as when using .NET 5.0+ support for `AssemblyMetadata` MSBuild items.

So for an attribute like:

  [assembly: System.Reflection.AssemblyMetadataAttribute("Foo", "Bar")]

A corresponding `ThisAssembly.Metadata.Foo` constant with the value `Bar` is provided. 
The metadata attribute can alternatively be declared using MSBuild in the project 
(for .NET 5.0+ projects):

    &lt;ItemGroup&gt;
      &lt;AssemblyMetadata Include="Foo" Value="Bar" /&gt;
    &lt;/ItemGroup&gt;

Generated code:
C#:

  partial class ThisAssembly
  {
      public static partial class Metadata
      {
          public const string Foo = "Bar";
      }
  }
</Description>
  </PropertyGroup>

  <ItemGroup>
    <Compile Remove="SponsorLink.cs" />
  </ItemGroup>

  <ItemGroup>
    <None Remove="ThisAssembly.Metadata.targets" />
  </ItemGroup>

  <ItemGroup>
    <None Include="SponsorLink.cs" />
  </ItemGroup>

  <ItemGroup>
    <!--<PackageReference Include="Devlooped.SponsorLink" Version="1.0.0" />-->
    <PackageReference Include="NuGetizer" Version="1.2.2" />
    <PackageReference Include="Microsoft.SourceLink.GitHub" Version="8.0.0" PrivateAssets="all" />

    <PackageReference Include="Scriban" Version="5.10.0" Pack="false" IncludeAssets="build" />
    <PackageReference Include="Microsoft.CSharp" Version="4.7.0" />
    <PackageReference Include="System.Threading.Tasks.Extensions" Version="4.5.4" />

    <PackageReference Include="Microsoft.CodeAnalysis.CSharp" Version="4.0.1" Pack="false" />
    <PackageReference Include="PolySharp" Version="1.14.1" PrivateAssets="All" />
  </ItemGroup>

</Project>
