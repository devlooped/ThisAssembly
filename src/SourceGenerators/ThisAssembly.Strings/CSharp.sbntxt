//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     ThisAssembly.Strings: {{ Version }}
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
{{ func summary }}
	    /// <summary>
        {{~ if $0.Comment ~}}
        /// {{ $0.Comment }}
        {{~ else ~}}
	    /// = "{{ $0.Value }}"
        {{~ end ~}}
	    /// </summary>
{{ end }}
{{ func render }}
    public static partial class {{ $0.Name }}
    {
        {{~ for value in $0.Values ~}}
		{{~ if!(value.HasFormat) ~}}
        {{- summary value ~}}
	    public static string {{ value.Name }} => Strings.GetResourceManager("{{ $1 }}").GetString("{{ $0.Prefix + value.Name }}");
        {{~ else ~}}
        {{~ if value.IsIndexedFormat ~}}
        {{- summary value ~}}
	    public static string {{ value.Name }}(
            {{- for arg in value.Format -}}
            object arg{{~ arg ~}}{{ if !for.last }}, {{ end }}
            {{- end -}}) 
            => string.Format(
                CultureInfo.CurrentCulture,
                Strings.GetResourceManager("{{ $1 }}").GetString("{{ $0.Prefix + value.Name }}"),
                {{ for arg in value.Format -}}
                arg{{- arg -}}{{- if !for.last -}}, {{ end }}{{- end -}});
        {{~ else if value.IsNamedFormat ~}}
        {{- summary value ~}}
	    public static string {{ value.Name }}(
            {{- for arg in value.Format -}}
            object {{ arg ~}}{{ if !for.last }}, {{ end }}
            {{- end -}}) 
            => string.Format(
                CultureInfo.CurrentCulture,
                Strings
                    .GetResourceManager("{{ $1 }}")
                    .GetString("{{ $0.Prefix + value.Name }}")
                    {{- for arg in value.Format }}
                    .Replace("{%{{}%}{{ arg }}{%{}}%}", "{%{{}%}{{ for.index }}{%{}}%}"){{- end -}},
                {{ for arg in value.Format -}}
                {{- arg -}}{{- if !for.last -}}, {{ end }}{{- end -}});

        {{~ end ~}}
        {{~ end ~}}
        {{~ end ~}}

        {{ for area in $0.NestedAreas 
            render area $1
           end }}
    }
{{ end }}

using System;
using System.Globalization;

partial class ThisAssembly
{
    {{ render RootArea ResourceName }}
}