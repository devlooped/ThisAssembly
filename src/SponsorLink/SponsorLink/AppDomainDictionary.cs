// <autogenerated />
#nullable enable
using System;

namespace Devlooped.Sponsors;

/// <summary>
/// A helper class to store and retrieve values from the current <see cref="AppDomain"/> 
/// as typed named values.
/// </summary>
/// <remarks>
/// This allows tools that run within the same app domain to share state, such as 
/// MSBuild tasks or Roslyn analyzers.
/// </remarks>
static class AppDomainDictionary
{
    /// <summary>
    /// Gets the value associated with the specified name, or creates a new one if it doesn't exist.
    /// </summary>
    public static TValue Get<TValue>(string name) where TValue : notnull, new()
    {
        var data = AppDomain.CurrentDomain.GetData(name);
        if (data is TValue firstTry)
            return firstTry;

        lock (AppDomain.CurrentDomain)
        {
            if (AppDomain.CurrentDomain.GetData(name) is TValue secondTry)
                return secondTry;

            var newValue = new TValue();
            AppDomain.CurrentDomain.SetData(name, newValue);
            return newValue;
        }
    }
}