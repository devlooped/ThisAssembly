<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Unknown_Description" xml:space="preserve">
    <value>Sponsoring projects you depend on ensures they remain active, and that you get the support you need. It's also super affordable and available worldwide! 
Please consider supporting the project by sponsoring at {0} and running 'sponsor sync {1}' afterwards.</value>
    <comment>Unknown sponsor description</comment>
  </data>
  <data name="Unknown_Message" xml:space="preserve">
    <value>Please consider supporting {0} by sponsoring {1} 🙏</value>
  </data>
  <data name="Unknown_Title" xml:space="preserve">
    <value>Unknown sponsor status</value>
  </data>
  <data name="Expired_Description" xml:space="preserve">
    <value>Sponsor-only features may be disabled. Please run 'sponsor sync {0}' and optionally enable automatic sync.</value>
  </data>
  <data name="Expired_Message" xml:space="preserve">
    <value>Sponsor status has expired and automatic sync has not been enabled.</value>
  </data>
  <data name="Expired_Title" xml:space="preserve">
    <value>Sponsor status expired</value>
  </data>
  <data name="Sponsor_Description" xml:space="preserve">
    <value>You are a true hero. Your sponsorship helps keep the project alive and thriving 🙏.</value>
  </data>
  <data name="Sponsor_Message" xml:space="preserve">
    <value>Thank you for supporting {0} with your sponsorship 💟!</value>
  </data>
  <data name="Sponsor_Title" xml:space="preserve">
    <value>You are a sponsor of the project, you rock 💟!</value>
  </data>
  <data name="Expiring_Description" xml:space="preserve">
    <value>Sponsor status has expired and you are in the grace period. Please run 'sponsor sync {0}' and optionally enable automatic sync.</value>
  </data>
  <data name="Expiring_Message" xml:space="preserve">
    <value>Sponsor status needs periodic updating and automatic sync has not been enabled.</value>
  </data>
  <data name="Expiring_Title" xml:space="preserve">
    <value>Sponsor status expired, grace period ending soon</value>
  </data>
  <data name="And" xml:space="preserve">
    <value>and</value>
  </data>
  <data name="Or" xml:space="preserve">
    <value>or</value>
  </data>
  <data name="Contributor_Description" xml:space="preserve">
    <value>Thanks for being part of the team with your contributions 🙏.</value>
  </data>
  <data name="Contributor_Message" xml:space="preserve">
    <value>Thank you for being part of team {0} with your contributions 💟!</value>
  </data>
  <data name="Contributor_Title" xml:space="preserve">
    <value>You are a contributor to the project, you rock 💟!</value>
  </data>
  <data name="Editor_Disabled" xml:space="preserve">
    <value>Editor usage of {0} requires an active sponsorship. Learn more at {1}.</value>
  </data>
  <data name="Grace_Description" xml:space="preserve">
    <value>Sponsoring projects you depend on ensures they remain active, and that you get the support you need. It's also super affordable and available worldwide! 
Please consider supporting the project by sponsoring at {0} and running 'sponsor sync {1}' afterwards.</value>
  </data>
  <data name="Grace_Message" xml:space="preserve">
    <value>Grace period ends in {0} days. Enjoy and please consider supporting {1} by sponsoring {2} 🙏</value>
  </data>
  <data name="Grace_Title" xml:space="preserve">
    <value>Unknown sponsor status, grace period</value>
  </data>
  <data name="Editor_DisabledRemarks" xml:space="preserve">
    <value>/// &lt;remarks&gt;
/// GitHub Sponsors is a great way to support open source projects, and it's available throughout most of the world.
/// You are considered a sponsor if:
/// - You are directly sponsoring Devlooped
/// - You contributed code to any of Devlooped's projects.
/// - You belong to a GitHub organization that is sponsoring Devlooped.
/// - You contributed to active and popular nuget packages that are OSS.
/// 
/// If so, just run: 
///     &gt; dotnet tool install -g dotnet-sponsor; sponsor sync devlooped
///     
/// Subsequently, the [Obsolete] attribute will be removed. 
/// Thanks! 🙏
/// &lt;/remarks&gt;</value>
  </data>
  <data name="Editor_GraceRemarks" xml:space="preserve">
    <value>/// &lt;remarks&gt;
/// This is a sponsored API. Your grace period will expire in {0} day(s).
/// 
/// GitHub Sponsors is a great way to support open source projects, and it's available throughout most of the world.
/// You are considered a sponsor if:
/// - You are directly sponsoring Devlooped
/// - You contributed code to any of Devlooped's projects.
/// - You belong to a GitHub organization that is sponsoring Devlooped.
/// - You contributed to active and popular nuget packages that are OSS.
/// 
/// If so, just run: 
///     &gt; dotnet tool install -g dotnet-sponsor; sponsor sync devlooped
/// 
/// Thanks! 🙏
/// &lt;/remarks&gt;</value>
  </data>
  <data name="OpenSource_Description" xml:space="preserve">
    <value>Thanks for being part of the open source community with your contributions 🙏.</value>
  </data>
  <data name="OpenSource_Message" xml:space="preserve">
    <value>Thank you for being an open source author 💟!</value>
  </data>
  <data name="OpenSource_Title" xml:space="preserve">
    <value>You are a an open source author, you rock 💟!</value>
  </data>
</root>